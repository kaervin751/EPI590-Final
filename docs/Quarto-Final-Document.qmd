---
title: "Epi 590R Final Project (Olympics)"
author: "Kourtney Ervin"
format: html
editor: visual
execute: 
  warning: false
  echo: false
---

## R Final Project - Kourtney Ervin

I have chosen to use the *RGriffin Kaggle dataset: 120 years of Olympic history: athletes and results*. This dataset contains descriptive traits of Olympic athletes including their event, country represented, and medal achieved from the 1896 Olympics in Athens to the Rio 2016 Olympics. Although it only includes the people who medaled, I thought this would be an interesting set to look at just because of 2024 being an Olympic year, as well as the first year that the number of female and male athletes were equal. 

```{r}
#| label: Reading in Data
library(tidyverse)
library(here)
library(gtsummary)

medal_cols <- c("id", "name", "sex", "age", "height", "weight", "team", "NOC", "games",
								"year", "season", "city", "sport", "event", "medal")
medals <- read_csv(here::here("data", "raw","athlete_events.csv"),
									 skip = 1, col_names = medal_cols)
```

**Task 1**

Creating a descriptive Table 1

```{r}
#| label: tbl-one
#| tbl-cap: "Descriptive Table"
table1 <- tbl_summary(
	medals,
	by = sex,
	include = c(NOC, season, height, weight),
	label = list(
		NOC ~ "Country",
		season ~ "Summer/Winter",
		height ~ "Height",
		weight ~ "Weight"
	),
	missing_text = "Missing")|>
	add_p(test = list(all_continuous () ~ "t.test",
										all_categorical() ~ "chisq.test"))|>
	add_overall(col_label = "**Total**|>")|>
	bold_labels()|>
	modify_footnote(update = everything() ~ NA)|>
	modify_header(label = "**Variable**", p.value = "**P**")
table1
```

@tbl-one is a descriptive table giving the distribution of countries, height, and weight of Olympic Athletes separated by sex and with a total column.

The mean (standard deviation) weight of female Olympians is `r inline_text(table1, variable = "weight", column = "stat_1")` kg.

**Task 2**

Fitting a regression model and creating the table

```{r}
#| label: tbl-two
#| tbl-cap: "Regression Table"
linear_mod <- lm(age ~ height + weight, data = medals)
tbl_regression(
	linear_mod,
	intercept = TRUE)
```

**Task 3**

Creating a histogram and adding a chance to show the mean and standard deviation.

```{r}
#|label: fig-one
#|fig-cap: "A histogram showing the distribution of heights of Olympic athletes, both male and female"
hist(medals$height,
		 main = "Frequency of height of Olympians",
		 xlab = "Height in cm",
		 ylab = "Frequency"
		 )
meanheight <- mean(medals$height, na.rm = TRUE)
stddevheight <- sd(medals$height, na.rm = TRUE)
```

@fig-one is a histogram showing the distribution of height frequency of Olympians both male and female combined. 
The mean height showed by the mean function is `r meanheight` in centimeters. The standard deviation is `r stddevheight`.

**Task 4**

Creating and using my function to find the mean and standard deviation of height or weight, depending on what you set to x.

```{r}
#|label: new-mean
x <- medals$height

new_mean <- function(x){
	n <- length(na.omit(x))
	mean_val <- sum(x, na.rm = TRUE)/n
	return(mean_val)}

new_dev <- function(x){
	output <- sd(x, na.rm=TRUE)
	return(output)
}

new_mean(x)
new_dev(x)
```

I understand this is similar to what we did in class, but I did have to add to it to make sure the NA in the data set were not included. I also added a standard deviation function just in case. 
